
import java.util.Scanner;

public class task2 {

    private static char[][] board = {
        {' ', ' ', ' '},
        {' ', ' ', ' '},
        {' ', ' ', ' '}
    };
    private static char HumanPlayer;

    public static void main(String[] args) {
        HumanPlayer = 'X';
        while (true) {
            printboard();
            if (HumanPlayer == 'X') {
                HumanMove();
            } else {
                aiMove();
            }
            if (isWin(HumanPlayer)) {
                printboard();
                System.out.println("Player " + HumanPlayer + " Win");
                break;
            }
            if (isDraw()) {
                printboard();
                System.out.println("Its Draw!!!");
                break;
            }
            if(HumanPlayer == 'X') {
                HumanPlayer = 'O';
            } else {
                HumanPlayer = 'X';
            }
        }
    }

    public static void printboard() {
        for(int i = 0; i < board.length; i++) {
            char[] row = board[i];
            System.out.println(row[0] + " | " + row[1] + " | " + row[2]);
            System.out.println("---------");
        }
    }

    public static void HumanMove() {
        @SuppressWarnings("resource")
        Scanner sc = new Scanner(System.in);
        int row, col;
        do {
            System.out.println("Enter row and column(0-2) : ");
            row = sc.nextInt();
            col = sc.nextInt();
        } while (board[row][col] != ' ');
        board[row][col] = 'X';
    }

    public static void aiMove() {
        int[] bestMove = minimax(board, 'O');
        board[bestMove[0]][bestMove[1]] = 'O';
    }
    private static int[] minimax(char[][] board, char player) {
        if (isWin('O')) return new int[]{-1, 1};  // O wins
        if (isWin('X')) return new int[]{-1, -1}; // X wins
        if (isDraw()) return new int[]{-1, 0}; // Draw

        int bestScore = (player == 'O') ? Integer.MIN_VALUE : Integer.MAX_VALUE;
        int[] bestMove = {-1, -1};
 
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == ' ') {
                    board[i][j] = player;
                    int score = minimax(board, (player == 'O') ? 'X' : 'O')[1];
                    board[i][j] = ' ';
                    if ((player == 'O' && score > bestScore) || (player == 'X' && score < bestScore)) {
                        bestScore = score;
                        bestMove = new int[]{i, j};
                    }
                }
            }
        }
        return new int[]{bestMove[0], bestMove[1], bestScore};
    }
    public static boolean isWin(char player) {
    for(int i=0; i<3; i++) {
        if((board[i][0]== player && board[i][1]== player && board[i][2]== player) ||
         (board[0][i]== player && board[1][i]== player && board[2][i]== player)) {
            return true;
        }  
    }
    if((board[0][0]== player && board[1][1]== player && board[2][2]== player) ||
    (board[0][2]== player && board[1][1]== player && board[2][0]== player)) {
        return true;
    }
    return false;
    }

    private static boolean isDraw() {
        for(char[] row : board) {
            for(char cell : row) {
                if(cell == ' ') {
                    return false;
                }
            }
        }
        return true;
    }

}
